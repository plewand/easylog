apply plugin: 'maven-publish'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.codigine'

def projectPropertiesFile = rootProject.file("../../proj.properties")

def projectProperties = new Properties()

projectProperties.load(new FileInputStream(projectPropertiesFile))

ext."signing.keyId"=projectProperties['gpg_key_id']
ext."signing.password"=projectProperties['gpg_password']
ext."signing.secretKeyRingFile"=projectProperties['gpg_secret_keyring_file']
ext.projectProperties = projectProperties

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'com.android.tools.build:gradle:2.3.3'
    compile 'org.aspectj:aspectjtools:1.8.9'
    compile 'org.aspectj:aspectjrt:1.8.9'
    compile "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.0"
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId group
            artifactId 'easylog-plugin'
            version "${projectProperties['artifact_version']}"
            from components.java
        }
    }
}


task sourceJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier "source"
}

def isReleaseBuild() {
    return project.ext.projectProperties['artifact_version'].contains("SNAPSHOT") == false
}

afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                pom.groupId = 'com.codigine'
                pom.artifactId = 'easylog-plugin'
                pom.version = projectProperties['artifact_version']

                repository(url: projectProperties['sonatype_release_url']) {
                    authentication(userName: projectProperties['sonatype_user'], password: projectProperties['sonatype_password'])
                }
                snapshotRepository(url: projectProperties['sonatype_snapshot_url']) {
                    authentication(userName: projectProperties['sonatype_user'], password: projectProperties['sonatype_password'])
                }

                pom.project {
                    name 'easylog'
                    packaging 'jar'
                    description 'easylog library plugin'
                    url 'https://github.com/plewand/easylog'

                    scm {
                        url 'https://github.com/plewand/easylog'
                        connection 'scm:git@github.com:plewand/easylog.git'
                        developerConnection 'scm:git@github.com:plewand/easylog.git'
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'plewand'
                            name 'Pawe≈Ç Lewandowski'
                            email 'plewand@o2.pl'
                        }
                    }
                }
            }
        }
    }

    signing {
        required { isReleaseBuild() && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from tasks.javadoc.destinationDir
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    artifacts {
        archives jar

        archives javadocJar
        archives sourcesJar
    }
}

jar {
    manifest {
        attributes(
                'Implementation-Title': 'com.codigine.easylog-plugin',
                'Implementation-Version': "${projectProperties['artifact_version']}",
                'Implementation-Vendor': 'Codigine'
        )
    }
}
